class Solution {
    void dfs(int row,int col,int[][] image,int[][] ans,int[] delrow,int[]delcol,int color,int oldcol)
    {
        int n=image.length;
        int m=image[0].length;
        ans[row][col]=color;
        for(int i=0;i<4;i++)
        {
            int nrow=row+delrow[i];
            int ncol=col+delcol[i];
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && image[nrow][ncol]==oldcol && ans[nrow][ncol]!=color)
            {
                dfs(nrow,ncol,image,ans,delrow,delcol,color,oldcol);
            }
        }

    }
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        int oldcol=image[sr][sc];
           int n = image.length;
        int m = image[0].length;
        int[][] ans = new int[n][m];
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                ans[i][j] = image[i][j];
            }
        }
        int delrow[]={-1,0,1,0};
        int delcol[]={0,1,0,-1};
        dfs(sr,sc,image,ans,delrow,delcol,color,oldcol);
        return ans;
    }
}